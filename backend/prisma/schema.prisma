// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
 

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String?   // Now required
  createdAt DateTime  @default(now())
  updatedAt DateTime?  @updatedAt  // Now required

  meetings       Meeting[]       @relation("HostMeetings")
  participations Participant[]
  messages       Message[]
}

model Meeting {
  id          Int          @id @default(autoincrement())
  title       String
  description String?
  scheduledAt DateTime
  duration    Int          // Duration in minutes
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  hostId      Int
  host        User         @relation("HostMeetings", fields: [hostId], references: [id])
  participants Participant[]
  messages     Message[]
}

model Participant {
  id         Int      @id @default(autoincrement())
  userId     Int
  meetingId  Int
  joinedAt   DateTime @default(now())

  user       User     @relation(fields: [userId], references: [id])
  meeting    Meeting  @relation(fields: [meetingId], references: [id])

  @@unique([userId, meetingId])
}

model Message {
  id         Int      @id @default(autoincrement())
  content    String
  sentAt     DateTime @default(now())
  userId     Int
  meetingId  Int

  user       User     @relation(fields: [userId], references: [id])
  meeting    Meeting  @relation(fields: [meetingId], references: [id])
}